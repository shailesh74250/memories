What features implemented
- Material UI implementation
- Project layout frontend
- Backend project structure
- Authentication JWT
- Social login using google
- Pagination
- CRUD operation in Backend
- MongoDB connectivity
- React-Redux
- Redux-Thunk
- Comment post, Share post, Like post
- Database Model
- Responsive 
- Deployment over Heroku
- Searching among the posts by tags or any string 
- Frontend project can be deploy over netlify (It's very easy)


Some concept -
- Backend server only run when mongodb gets connected successfully
- We can defined size of data going to be transfer via network or through api
    - app.use(express.json({ limit: '30mb', extended: true }))
    - app.use(express.urlencoded({ limit: '30mb', extended: true }))
- Now no need to use body parser, its deprecated 
- No need to pass extra parameter during mongodb connection (but it only work in mongoose updated version)

Decode jwt token 
- We can get user details from json web token or jwt token in backend while verifying token 
    if token is verify the we can decode it and get the detail and add that details into request so that later we can use it in controller wherever we want, using this process we can find out user role like - admin, super admin, etc. then according to user role we can proceed request
- For more info check auth middleware 

Forgot password 

Reset Password 

Authentication using mobile number instead of email 

Authentication using one of them like - using email or phone number 

Authentication verification opt or email 

Pagination 

Search by tags or any string

Sort data

Update, delete, view, create data